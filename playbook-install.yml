---
- hosts: civicrm
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    # avoid error: Failed to set permissions on the temporary files Ansible needs to create when becoming an unprivileged user
    #allow_world_readable_tmpfiles: true

  tasks:
  #################################
  ## setup the user, the domain, the database
  #################################
  - name: Create user, domain and database
    import_tasks: tasks/hslamp.yml

  - name: Sleep to avoid issue invalid user for temporary files
    pause:
      seconds: 10

  #################################
  ## install useful helper scripts
  #################################
  - name: create bin directory
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
      mode: 0744

  - name: download wp-cli
    become: yes
    become_user: "{{pac}}-{{user}}"
    get_url:
      # see https://wp-cli.org
      url: https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
      dest: /home/pacs/{{pac}}/users/{{user}}/bin/wp-cli.phar
      mode: '0700'

  - name: upload mysql script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/mysql.sh" src="templates/mysql.sh" mode=0700

  #################################
  ## install wordpress
  #################################
  - name: install wordpress
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      creates: /home/pacs/{{pac}}/users/{{user}}/wordpress
      src: https://de.wordpress.org/latest-de_DE.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}

  - name: drop htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
       state: absent

  - name: create symbolic link for htdocs-ssl
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/wordpress"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl"
      state: link

  #################################
  ## prepare configuration file
  #################################
  - name: copy config file
    become: yes
    become_user: "{{pac}}-{{user}}"
    copy:
      src: "/home/pacs/{{pac}}/users/{{user}}/wordpress/wp-config-sample.php"
      remote_src: yes
      dest: "/home/pacs/{{pac}}/users/{{user}}/wordpress/wp-config.php"
  - name: set user name
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/wordpress/wp-config.php"
      regexp: '^define\( ''DB_USER'','
      line: "define( 'DB_USER', '{{pac}}_{{user}}' );"
  - name: set database name
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/wordpress/wp-config.php"
      regexp: '^define\( ''DB_NAME'','
      line: "define( 'DB_NAME', '{{pac}}_{{user}}' );"
  - name: set database password
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/wordpress/wp-config.php"
      regexp: '^define\( ''DB_PASSWORD'','
      line: "define( 'DB_PASSWORD', '{{password}}' );"
  - name: set keys and salts
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'AUTH_KEY',.*#'AUTH_KEY', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'SECURE_AUTH_KEY',.*#'SECURE_AUTH_KEY', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'LOGGED_IN_KEY',.*#'LOGGED_IN_KEY', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'NONCE_KEY',.*#'NONCE_KEY', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'AUTH_SALT',.*#'AUTH_SALT', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'SECURE_AUTH_SALT',.*#'SECURE_AUTH_SALT', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'LOGGED_IN_SALT',.*#'LOGGED_IN_SALT', '$secret');#g" wp-config.php
      secret=`openssl rand -base64 64 | tr -d '\n'`
      sed -i "s#'NONCE_SALT',.*#'NONCE_SALT', '$secret');#g" wp-config.php
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/wordpress"

  #######################
  ## initialise wordpress
  #######################
  - name: create site with admin user
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      $HOME/bin/wp-cli.phar core install \
        --url='{{ domain }}' --title='{{ sitename }}' \
        --allow-root --no-color --path='/home/pacs/{{pac}}/users/{{user}}/wordpress' \
        --admin_name='{{ adminname }}' \
        --admin_email='{{ adminemail }}' \
        --admin_password='{{ adminpwd }}' || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.wordpressinitialized
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/wordpress"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.wordpressinitialized"

  ###################
  ## install civicrm 
  ###################
  - name: install civicrm plugin
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      creates: /home/pacs/{{pac}}/users/{{user}}/wordpress/wp-content/plugins/civicrm
      src: https://download.civicrm.org/civicrm-{{civicrm_version}}-wordpress.zip
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/wordpress/wp-content/plugins/

  - name: download civicrm translations
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      src: https://sourceforge.net/projects/civicrm/files/civicrm-stable/{{civicrm_version}}/civicrm-{{civicrm_version}}-l10n.tar.gz/download
      #src: https://download.pokorra.de/cache/202204/civicrm-{{civicrm_version}}-l10n.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/wordpress/wp-content/plugins/civicrm
      creates: /home/pacs/{{pac}}/users/{{user}}/wordpress/wp-content/plugins/civicrm/civicrm/l10n

  - name: activate civicrm
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      $HOME/bin/wp-cli.phar plugin activate civicrm || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.civicrmactivated
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/wordpress"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.civicrmactivated"

  #################################
  ## configure cronjobs
  #################################
  - name: setup cronjob for plugin and theme update
    # https://developer.wordpress.org/cli/commands/plugin/update/
    # https://developer.wordpress.org/cli/commands/theme/update/
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "run wordpress plugin and theme updates"
      hour: "5"
      minute: "{{random_minute}}"
      job: "cd /home/pacs/{{pac}}/users/{{user}}/wordpress && ~/bin/wp-cli.phar plugin update --all && ~/bin/wp-cli.phar theme update --all"


  ############################################################
  ## securing the backend and adding proxied domain for forms
  ############################################################
  - name: upload htaccess for the backend to deny access for unprivileged IP addresses
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess" src="templates/htaccess_crm" mode=0644

  - name: setup the domain for the forms
    hsdomain.js: name="{{forms_domain}}" owner="{{pac}}-{{user}}" exists="true"

  - name: upload htaccess for the forms domain to allow specific queries
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{forms_domain}}/.htaccess" src="templates/htaccess_forms" mode=0644

  - name: create directory for proxy
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/proxy"
      state: directory
      mode: 0755

  # original: https://github.com/zounar/php-proxy/
  # our branch: https://github.com/SolidCharity/php-proxy/tree/TP202209-work
  - name: download our own branch of php-proxy
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      creates: /home/pacs/{{pac}}/users/{{user}}/proxy/Proxy.php
      src: https://github.com/SolidCharity/php-proxy/archive/refs/heads/TP202209-work.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}/proxy
      extra_opts: [--strip-components=1]

  - name: upload php proxy configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/proxy/config.php" src="templates/proxy.config.php" mode=0644

  - name: drop htdocs-ssl of forms domain
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{forms_domain}}/htdocs-ssl"
       state: absent

  - name: create symbolic link for htdocs-ssl for the forms domain
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/proxy"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{forms_domain}}/htdocs-ssl"
      state: link

  # our proxy expects the permalinks in this format: day and name
  - name: change option for permalinks to use names
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      $HOME/bin/wp-cli.phar option set permalink_structure "/%year%/%monthnum%/%day%/%postname%/" || exit -1
      touch /home/pacs/{{pac}}/users/{{user}}/.civicrm_permalinks_set
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/wordpress"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.civicrm_permalinks_set"
